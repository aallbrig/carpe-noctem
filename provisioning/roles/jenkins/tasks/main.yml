---
- block:
  - name: Create directory in case it does not exist.
    file: path={{jenkins.passwordFileDir}} state=directory

  - name: Copy password file into location
    template: src=password_file.j2 dest={{jenkins.passwordFileDir}}/{{jenkins.passwordFileName}}
    become: True

  - copy: src={{ item }} dest={{ ansible_env.PWD }} owner=jenkins mode=0644
    with_fileglob: jobs/*.yaml

  - name: Create Jenkins Job directory in case it does not exist.
    file: path={{ ansible_env.PWD }}/jobs state=directory

  - name: Copy jenkins jobs onto server
    copy:
      src: files/jobs
      dest: "{{ ansible_env.PWD }}"
      directory_mode: yes
    register: jobsDirExists

  - name: Make jenkins jobs directory tree readable
    file:
      path: "{{ ansible_env.PWD }}/jobs"
      mode: u=rwX,g=rX,o=rX
      recurse: yes

  - name: Ensure directory's existance
    command: ls -a
    register: commandLineResults

  - debug: msg="{{ commandLineResults }}"

  - name: Ensure jobs' existance
    command: ls -a {{ ansible_env.PWD }}/jobs
    register: commandLineResults

  - debug: msg="{{ commandLineResults }}"

  - debug: msg="{{ jobsDirExists }}"

  - name: Test all jenkins job using JJB
    command: jenkins-jobs test "{{ ansible_env.PWD }}/jobs/{{ item }}"
    with_items: "{{ commandLineResults.stdout_lines | difference(['.', '..', 'jobs']) }}"
    register: debug

  - debug: msg="{{ debug }}"

  - name: Deploy all jenkins job using JJB
    command: jenkins-jobs update {{ item }}
    with_items: "{{ commandLineResults.stdout_lines | difference(['.', '..', 'jobs']) }}"
    register: debug
    notify:
      - restart jenkins

  - debug: msg="{{ debug }}"

  tags:
  - jenkins
